// 4.4

// 4.13  int i;double d;
//(a)d = i =3.5; i = 3;d = 3.0;
//(b)i = d = 3.5; i = 3;d = 3.5;


// 4.14
//第一条错误：常量不能作为左侧运算对象/
//第二条if条件为真

// 4.15
//pi是指针，不能将int*类型转换成int类型

// 4.16
//(a)赋值运算符的优先级低于关系运算符的运算级，所以在条件语句中一般将赋值用括号括起来;将函数返回值与0的比较结果赋值给了i
//(b)混用赋值和比较运算符


// 4.5
// 4.17
// 前置递增运算符是先执行+1操作，然后将改变后的对象作为求值结果；后置运算符也会将运算对象+1，但求值结果是+1之前的对象的副本


// 4.18
//首先不会输出vector中第一个元素，且如果vector中没有赋值，会对指向尾元素的夏亦为之执行解引用。

// 4.19
//(a)ptr不为空指针为真，执行（*ptr++）ptr指向的下一元素值是否为0
//ival+1；左侧运算对象的求职结果是ival+1之前对象的副本，若不为零；再判断+1后的ival的值
//非法，求值顺序任意